{"ast":null,"code":"import{createStore,applyMiddleware}from'redux';import{persistStore}from'redux-persist';import logger from'redux-logger';import createSagaMiddleware from'redux-saga';import rootSaga from'./root-saga';import rootReducer from'./root-reducer';var sagaMiddleware=createSagaMiddleware();var middlewares=[sagaMiddleware];if(process.env.NODE_ENV==='development'){middlewares.push(logger);}export var store=createStore(rootReducer,applyMiddleware.apply(void 0,middlewares));sagaMiddleware.run(rootSaga);export var persistor=persistStore(store);","map":{"version":3,"sources":["/Users/nina/crwn-clothing/client/src/redux/store.js"],"names":["createStore","applyMiddleware","persistStore","logger","createSagaMiddleware","rootSaga","rootReducer","sagaMiddleware","middlewares","process","env","NODE_ENV","push","store","run","persistor"],"mappings":"AAAA,OAASA,WAAT,CAAsBC,eAAtB,KAA6C,OAA7C,CACA,OAASC,YAAT,KAA6B,eAA7B,CACA,MAAOC,CAAAA,MAAP,KAAmB,cAAnB,CACA,MAAOC,CAAAA,oBAAP,KAAiC,YAAjC,CAEA,MAAOC,CAAAA,QAAP,KAAqB,aAArB,CACA,MAAOC,CAAAA,WAAP,KAAwB,gBAAxB,CAEA,GAAMC,CAAAA,cAAc,CAAGH,oBAAoB,EAA3C,CAEA,GAAMI,CAAAA,WAAW,CAAG,CAACD,cAAD,CAApB,CAEA,GAAKE,OAAO,CAACC,GAAR,CAAYC,QAAZ,GAAyB,aAA9B,CAA6C,CACzCH,WAAW,CAACI,IAAZ,CAAiBT,MAAjB,EACH,CAED,MAAO,IAAMU,CAAAA,KAAK,CAAGb,WAAW,CAACM,WAAD,CAAcL,eAAe,MAAf,QAAmBO,WAAnB,CAAd,CAAzB,CAEPD,cAAc,CAACO,GAAf,CAAmBT,QAAnB,EAEA,MAAO,IAAMU,CAAAA,SAAS,CAAGb,YAAY,CAACW,KAAD,CAA9B","sourcesContent":["import { createStore, applyMiddleware } from 'redux';\nimport { persistStore } from 'redux-persist';\nimport logger from 'redux-logger';\nimport createSagaMiddleware from 'redux-saga';\n\nimport rootSaga from './root-saga';\nimport rootReducer from './root-reducer';\n\nconst sagaMiddleware = createSagaMiddleware();\n\nconst middlewares = [sagaMiddleware];\n\nif ( process.env.NODE_ENV === 'development') {\n    middlewares.push(logger);\n}\n\nexport const store = createStore(rootReducer, applyMiddleware(...middlewares));\n\nsagaMiddleware.run(rootSaga);\n\nexport const persistor = persistStore(store);"]},"metadata":{},"sourceType":"module"}