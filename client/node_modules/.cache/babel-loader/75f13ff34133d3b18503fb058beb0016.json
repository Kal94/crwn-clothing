{"ast":null,"code":"import { takeLatest, put, all, call } from 'redux-saga/effects';\nimport UserActionTypes from './user.types';\nimport { SignInSuccess, SignInFailure } from './user.actions';\nimport { auth, googleProvider, createUserProfileDocument } from '../../firebase/firebase.utils';\nexport function* signInWithGoogle() {\n  try {\n    const UserRef = yield auth.signInWithPopup(googleProvider);\n    console.log(UserRef); // const {user} = yield auth.signInWithPopup(googleProvider);\n    // const UserRef = yield call(createUserProfileDocument, user);\n    // const userSnapshot = yield UserRef.get();\n    // yield put (SignInSuccess({\n    //     id: userSnapshot.id,\n    //     ...userSnapshot.data()\n    // }))\n  } catch (error) {\n    yield put(SignInFailure(error));\n  }\n}\nexport function* signInWithEmail({\n  payload: {\n    email,\n    password\n  }\n}) {\n  try {\n    const {\n      user\n    } = yield auth.signInWithEmailAndPassword(email, password);\n    const UserRef = yield call(createUserProfileDocument, user);\n    const userSnapshot = yield UserRef.get();\n    yield put(SignInSuccess({\n      id: userSnapshot.id,\n      ...userSnapshot.data()\n    }));\n  } catch (error) {\n    yield put(SignInFailure(error));\n  }\n}\nexport function* onGoogleSignInStart() {\n  yield takeLatest(UserActionTypes.GOOGLE_SIGN_IN_START, signInWithGoogle);\n}\nexport function* onEmailSignInStart() {\n  yield takeLatest(UserActionTypes.EMAIL_SIGN_IN_START, signInWithEmail);\n}\nexport function* userSagas() {\n  yield all([call(onGoogleSignInStart), call(onEmailSignInStart)]);\n}","map":{"version":3,"sources":["/Users/ava/crwn-clothing/src/redux/user/user.sagas.js"],"names":["takeLatest","put","all","call","UserActionTypes","SignInSuccess","SignInFailure","auth","googleProvider","createUserProfileDocument","signInWithGoogle","UserRef","signInWithPopup","console","log","error","signInWithEmail","payload","email","password","user","signInWithEmailAndPassword","userSnapshot","get","id","data","onGoogleSignInStart","GOOGLE_SIGN_IN_START","onEmailSignInStart","EMAIL_SIGN_IN_START","userSagas"],"mappings":"AAAA,SAASA,UAAT,EAAqBC,GAArB,EAA0BC,GAA1B,EAA+BC,IAA/B,QAA2C,oBAA3C;AAEA,OAAOC,eAAP,MAA4B,cAA5B;AAEA,SAASC,aAAT,EAAwBC,aAAxB,QAA6C,gBAA7C;AAEA,SAASC,IAAT,EAAeC,cAAf,EAA+BC,yBAA/B,QAAgE,+BAAhE;AAEA,OAAO,UAAUC,gBAAV,GAA8B;AACjC,MACA;AACI,UAAMC,OAAO,GAAG,MAAMJ,IAAI,CAACK,eAAL,CAAqBJ,cAArB,CAAtB;AACAK,IAAAA,OAAO,CAACC,GAAR,CAAYH,OAAZ,EAFJ,CAGI;AACA;AACA;AACA;AACA;AACA;AACA;AACH,GAXD,CAYA,OAAOI,KAAP,EACA;AACI,UAAMd,GAAG,CAACK,aAAa,CAACS,KAAD,CAAd,CAAT;AACH;AACJ;AAED,OAAO,UAAUC,eAAV,CAA0B;AAACC,EAAAA,OAAO,EAAE;AAACC,IAAAA,KAAD;AAAQC,IAAAA;AAAR;AAAV,CAA1B,EAAwD;AAC3D,MACA;AACI,UAAM;AAACC,MAAAA;AAAD,QAAS,MAAMb,IAAI,CAACc,0BAAL,CAAgCH,KAAhC,EAAuCC,QAAvC,CAArB;AACA,UAAMR,OAAO,GAAG,MAAMR,IAAI,CAACM,yBAAD,EAA4BW,IAA5B,CAA1B;AACA,UAAME,YAAY,GAAG,MAAMX,OAAO,CAACY,GAAR,EAA3B;AACA,UAAMtB,GAAG,CAAEI,aAAa,CAAC;AACrBmB,MAAAA,EAAE,EAAEF,YAAY,CAACE,EADI;AAErB,SAAGF,YAAY,CAACG,IAAb;AAFkB,KAAD,CAAf,CAAT;AAIH,GATD,CAUA,OAAOV,KAAP,EACA;AACI,UAAMd,GAAG,CAACK,aAAa,CAACS,KAAD,CAAd,CAAT;AACH;AACJ;AAED,OAAO,UAAUW,mBAAV,GAAiC;AACpC,QAAM1B,UAAU,CAACI,eAAe,CAACuB,oBAAjB,EAAuCjB,gBAAvC,CAAhB;AACH;AAED,OAAO,UAAUkB,kBAAV,GAA+B;AAClC,QAAM5B,UAAU,CAACI,eAAe,CAACyB,mBAAjB,EAAsCb,eAAtC,CAAhB;AACH;AAED,OAAO,UAAUc,SAAV,GAAsB;AACzB,QAAM5B,GAAG,CAAC,CACNC,IAAI,CAACuB,mBAAD,CADE,EAENvB,IAAI,CAACyB,kBAAD,CAFE,CAAD,CAAT;AAIH","sourcesContent":["import { takeLatest, put, all, call } from 'redux-saga/effects';\n\nimport UserActionTypes from './user.types';\n\nimport { SignInSuccess, SignInFailure } from './user.actions'\n\nimport { auth, googleProvider, createUserProfileDocument } from '../../firebase/firebase.utils';\n\nexport function* signInWithGoogle () {\n    try\n    {\n        const UserRef = yield auth.signInWithPopup(googleProvider);\n        console.log(UserRef);\n        // const {user} = yield auth.signInWithPopup(googleProvider);\n        // const UserRef = yield call(createUserProfileDocument, user);\n        // const userSnapshot = yield UserRef.get();\n        // yield put (SignInSuccess({\n        //     id: userSnapshot.id,\n        //     ...userSnapshot.data()\n        // }))\n    } \n    catch (error)\n    {\n        yield put(SignInFailure(error));\n    }\n}\n\nexport function* signInWithEmail({payload: {email, password}}) {\n    try \n    {\n        const {user} = yield auth.signInWithEmailAndPassword(email, password);\n        const UserRef = yield call(createUserProfileDocument, user);\n        const userSnapshot = yield UserRef.get();\n        yield put (SignInSuccess({\n            id: userSnapshot.id,\n            ...userSnapshot.data()\n        }))\n    }\n    catch (error)\n    {\n        yield put(SignInFailure(error))\n    }\n}\n\nexport function* onGoogleSignInStart () {\n    yield takeLatest(UserActionTypes.GOOGLE_SIGN_IN_START, signInWithGoogle)\n}\n\nexport function* onEmailSignInStart() {\n    yield takeLatest(UserActionTypes.EMAIL_SIGN_IN_START, signInWithEmail)\n}\n\nexport function* userSagas() {\n    yield all([\n        call(onGoogleSignInStart),\n        call(onEmailSignInStart)\n    ])\n}"]},"metadata":{},"sourceType":"module"}